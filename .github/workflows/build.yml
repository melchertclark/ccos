name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
      fail-fast: false  # Allow other jobs to continue if one fails
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Build executable (Windows)
        if: matrix.os == 'windows-latest'
        run: pyinstaller --onefile --name url_scraper_win.exe src/main.py
          
      - name: Build executable (macOS)
        if: matrix.os == 'macos-latest'
        run: pyinstaller --onefile --name url_scraper_mac src/main.py
          
      - name: Prepare distribution
        shell: bash
        run: |
          mkdir -p dist_package
          cp README.txt dist_package/
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            cp dist/url_scraper_win.exe dist_package/
            cp scripts/RUN_ME.bat dist_package/
          else
            cp dist/url_scraper_mac dist_package/
            cp scripts/RUN_ME.command dist_package/
            chmod +x dist_package/url_scraper_mac
            chmod +x dist_package/RUN_ME.command
          fi
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-${{ matrix.os }}
          path: dist_package/
          
  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
          
      - name: Create universal distribution
        run: |
          mkdir -p universal-dist
          cp -r artifacts/dist-windows-latest/* universal-dist/
          cp -r artifacts/dist-macos-latest/* universal-dist/
          cd universal-dist
          zip -r ../url-scraper_universal.zip *
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: url-scraper_universal.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 